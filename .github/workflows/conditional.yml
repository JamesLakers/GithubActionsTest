name: Conditional
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
        - name: Get code
          uses: actions/checkout@v3
        - name: Cache dependencies
          id: cache
          uses: actions/cache@v3
          with:
            path: node_modules
            key: cache-node-modules ${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          run: npm ci
        - name: Lint code
          run: npm run lint

    tests:
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout
          uses: actions/checkout@v4.2.0
        - name: Install node
          uses: actions/setup-node@v4.0.4
          with:
            node-version: 20
        - name: Cache dependencies
          id: cache
          uses: actions/cache@v3
          with:
            path: node_modules
            key: cache-node-modules ${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          run: npm ci
        - name: Run tests
          id: runTests
          run: npm run test
          #continue-on-error: true     

    build:
      needs: tests
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout
          uses: actions/checkout@v4.2.0
        - name: Cache dependencies
          id: cache
          uses: actions/cache@v3
          with:
            path: node_modules
            key: cache-node-modules ${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          run: npm ci
        - name: Build package
          run: npm run build
        - name: Publish file
          id: publish
          run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT  ';'
        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: dist-files
            path: dist

    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps: 
        - name: Download artifacts
          uses: actions/download-artifact@v4
          with: 
            name: dist-files
        - name: Output contents
          run: ls
        - name: Deploy
          run: echo 'Deploying...' 

    uploadReport:
      needs: [lint, deploy]
      if: failure()
      runs-on: unbuntu-latest
      steps:
        - name: Upload test report
          uses: actions/upload-artifact@v4
          with:
              name: testReport
              path: test.json
            